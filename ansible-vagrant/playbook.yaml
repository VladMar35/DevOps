#Router
- name: Setup a router VM
  hosts: router
  become: yes
  tasks:
    #sudo apt update
    - name: Update your repo
      ansible.builtin.apt:
        update_cache: yes
        cache_valid_time: 3600
    #Upload a netplan cfg from host to VM
    - name: Copy your natplan file
      template:
        src: ".provision/router.yaml"
        dest: "/etc/netplan/router.yaml"
    - name: Apply netplan and delete default config
      ansible.builtin.shell: cd /etc/netplan && sudo rm 50-vagrant.yaml && sudo netplan apply

    #Allow forwarding for node
    - name: set sysctl
      ansible.posix.sysctl:
        name: net.ipv4.ip_forward
        value: '1'
        state: present
        sysctl_set: true
        reload: true

#VM A
- name: Setup a vmA VM
  hosts: vmA
  become: yes
  tasks:
    #sudo apt update
    - name: Update your repo
      ansible.builtin.apt:
        update_cache: yes
        cache_valid_time: 3600
    #Upload a netplan cfg from host to VM
    - name: Copy your natplan file
      template:
        src: ".provision/vma.yaml"
        dest: "/etc/netplan/vma.yaml"
    - name: Apply netplan and delete default config
      ansible.builtin.shell: cd /etc/netplan && sudo rm 50-vagrant.yaml && sudo netplan apply

    #Allow forwarding for node
    - name: set sysctl
      ansible.posix.sysctl:
        name: net.ipv4.ip_forward
        value: '1'
        state: present
        sysctl_set: true
        reload: true
    
    #Install and setup nginx 
    - name: Update apt cache and install Nginx
      apt:
        name: nginx
        state: latest
        update_cache: yes
    - name: Copy nginx config
      template:
        src: "~/vagrant/vagrant-ansible/.provision/nginx.conf"
        dest: "/etc/nginx/nginx.conf"
      notify: Restart Nginx
    - name: Copy reserv proxy dir
      copy:
        src: "~/vagrant/vagrant-ansible/.provision/nginxconfig.io"
        dest: "/etc/nginx/"
        mode: preserve
    - name: Copy sites nginx config
      template:
        src: "~/vagrant/vagrant-ansible/.provision/example.com.conf"
        dest: "/etc/nginx/sites-available/default"
      notify: Restart Nginx

    - name: Enable new site
      file:
        src: "/etc/nginx/sites-available/default"
        dest: "/etc/nginx/sites-enabled/default"
        state: link
      notify: Restart Nginx
  handlers:
    - name: Restart Nginx
      service:
        name: nginx
        state: restarted

#VM B
- name: Setup a vmB VM
  hosts: vmB
  become: yes
  tasks:
    #sudo apt update
    - name: Update your repo
      ansible.builtin.apt:
        update_cache: yes
        cache_valid_time: 3600
    #Upload a netplan cfg from host to VM
    - name: Copy your natplan file
      template:
        src: ".provision/vmb.yaml"
        dest: "/etc/netplan/vmb.yaml"
    - name: Apply netplan and delete default config
      ansible.builtin.shell: cd /etc/netplan && sudo rm 50-vagrant.yaml && sudo netplan apply

    #Allow forwarding for node
    - name: set sysctl
      ansible.posix.sysctl:
        name: net.ipv4.ip_forward
        value: '1'
        state: present
        sysctl_set: true
        reload: true
    #Install/start mysql server and dependencies           
    - name: Installing Mysql  and dependencies
      package:
       name: "{{item}}"
       state: present
       update_cache: yes
      loop:
       - mysql-server
       - mysql-client 
       - python3-mysqldb
       - libmysqlclient-dev
      become: yes
    - name: start and enable mysql service
      service:
        name: mysql
        state: started
        enabled: yes
    #Create DB and User (variables from /group_vars)    
    - name: creating mysql user (medium_post)
      mysql_user:
        name: "{{db_user}}"
        password: "{{db_pass}}"
        priv: '*.*:ALL'
        host: '%'
        state: present
    - name: creating medium_db
      mysql_db:
        name: "{{db_name}}"
        state: present
    - name: Enable remote login to mysql
      lineinfile:
         path: /etc/mysql/mysql.conf.d/mysqld.cnf
         regexp: '^bind-address'
         line: 'bind-address = 192.168.101.1'
         backup: yes
      notify:
         - Restart mysql
  handlers:
    - name: Restart mysql
      service:
        name: mysql
        state: restarted

#VM C
- name: Setup a vmC VM
  hosts: vmC
  become: yes
  tasks:
    #sudo apt update
    - name: Update your repo
      ansible.builtin.apt:
        update_cache: yes
        cache_valid_time: 3600
    #Upload a netplan cfg from host to VM
    - name: Copy your natplan file
      template:
        src: ".provision/vmc.yaml"
        dest: "/etc/netplan/vmc.yaml"
    - name: Apply netplan and delete default config
      ansible.builtin.shell: cd /etc/netplan && sudo rm 50-vagrant.yaml && sudo netplan apply
    #Install apache and PHP modules
    - name: Installing Apache and php modules
      package:
       name: "{{item}}"
       state: present
       update_cache: yes
      loop:
       - apache2
       - libapache2-mod-php
       - php-mysql
       - php-dom
    #UFW Configuration   
    - name: Allow 80 port
      ansible.builtin.shell: sudo ufw allow 'Apache'
    - name: Download and Extract WorPress
      unarchive:
        src: https://wordpress.org/latest.tar.gz
        dest: /var/www/
        remote_src: yes

    - name: Update default Apache site
      lineinfile:
        path: /etc/apache2/sites-enabled/000-default.conf
        state: present
        regexp: '(.)+DocumentRoot /var/www/html'
        line: 'DocumentRoot /var/www/wordpress'
    #Registering a virtual host to apache default cfg
    - name: Registering a virtualhost
      ansible.builtin.shell: sudo sed -i "1d" /etc/apache2/sites-available/000-default.conf && sudo sed -i '1 a<VirtualHost 192.168.102.1:80>' /etc/apache2/sites-available/000-default.conf && sudo sed -i '10 aDirectoryIndex index.html index.php' /etc/apache2/sites-available/000-default.conf

    - name: Restart Apache
      service:
        name: apache2
        state: restarted

    - name: Copy sample config file
      command: mv /var/www/wordpress/wp-config-sample.php /var/www/wordpress/wp-config.php
    #Overwrite wp-config
    - name: Update Wordpress config file
      lineinfile:
        path: /var/www/wordpress/wp-config.php
        regexp: "{{item.regexp}}"
        line: "{{item.line}}"
      with_items:
        - {'regexp': "define\\( 'DB_NAME', '(.)+' \\);", 'line': "define( 'DB_NAME', '{{db_name}}' );"}
        - {'regexp': "define\\( 'DB_USER', '(.)+' \\);", 'line': "define( 'DB_USER', '{{db_user}}' );"}
        - {'regexp': "define\\( 'DB_PASSWORD', '(.)+' \\);", 'line': "define( 'DB_PASSWORD', '{{db_pass}}' );"}
        - {'regexp': "define\\( 'DB_HOST', '(.)+' \\);", 'line': "define( 'DB_HOST', '{{db_host}}' );"}
    - name: Update ownership to Apache user
      file:
        path: /var/www/wordpress/
        state: directory
        recurse: yes
        owner: www-data

    - name: Set the correct permissions on Wordpress directories
      command: find /var/www/wordpress/ -type d -exec chmod 750 {} \;

    - name: Set the correct permissions for Wordpress files
      command: find /var/www/wordpress/ -type f -exec chmod 640 {} \;